---
title: "Final Project, STAT 579"
author: "TEAM 5: Amin Shirazi, Hana Lee, Jessica Kueon, Sungchan Park"
date: "November 22, 2018"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```


```{r message = FALSE, warning = FALSE}
library(tidyverse)
d <- read.csv("SpeedDating.csv")

d <- d %>% filter(wave %in% c(1:5, 7:11, 13:15, 17)) #Remove some waves as in the paper

d <- d %>% mutate(new.wave = if_else(wave %in% 7:11, wave - 1,
                                if_else(wave %in% 13:15, wave -2,
                                        if_else(wave == 17, wave -3, as.double(wave)))))

d %>%  select(wave, new.wave) %>% table()

d <- d %>% mutate(wave = new.wave) %>%
  select(-new.wave)

#################d is the final data currently###############################

length(unique(d$iid))

temp <- d %>% group_by(wave, gender, id) %>%
  summarise(n = n())

View(temp%>% filter(wave == 14))

temp1 <- d %>% group_by(wave, id, gender) %>% 
  summarise(n = n())

View(temp1 %>% filter(wave == 2))


(summary <- d %>% group_by(wave, id, gender, idg) %>%
  summarise(n = n()) %>%
  ungroup(wave, id, gender, idg) %>%
  select(wave, gender, n) %>%
  group_by(wave, gender) %>%
  count() %>%
  spread(gender, nn))

sum(summary$`0`, summary$`1`)


t1 <- d %>% group_by(wave, gender, iid) %>%
  summarise(`percentage of yes` = 100 * mean(dec_o),
            `percentage of match` = 100 * mean(match),
            `# of meeting` = n()) #Individual level
View(t1)

t1 %>% ggplot(aes(x = wave, fill = factor(gender))) + geom_bar() #Distribution of gender by wave
t1 %>% ggplot(aes(x = wave, fill = factor(gender))) + geom_bar(position = "fill") #Distribution of gender by wave
d %>% group_by(gender, iid) %>%
  count() %>%
  ggplot(aes(x = factor(gender))) + geom_bar()

t1 %>% ggplot(aes(x = factor(wave), y = `percentage of yes`)) + geom_boxplot() + facet_grid(factor(gender)~.) 

t1 %>% ggplot(aes(x = factor(gender), y = `percentage of yes`)) + geom_boxplot() + facet_grid(.~factor(wave)) 

t2 <- d %>% group_by(wave, gender) %>%
  summarise(`percentage of yes` = 100 * mean(dec_o),
            `percentage of match` = 100 * mean(match),
            `# of meeting` = n()) #Wave level
t2 %>% ggplot(aes(x = factor(wave), y = `percentage of yes`, 
                  group = factor(gender), shape = factor(gender), color = factor(gender))) +
  geom_point() + geom_line() + ylim(c(0, 70))

d %>% filter(dec_o == 1) %>%
  group_by(wave) %>%
  ggplot(aes(x = factor(dec_o), fill = factor(gender))) + geom_bar(position = "fill") + facet_grid(.~ wave)

```

## Including Plots

You can also embed plots, for example:

```{r}
maps::map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))

map.world <- map_data("world")

```

Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.


##JESS


Female=0
Male=1


```{r}
head(d)

## Wave 8 Analysis

##mean age for everyone
d %>% filter(wave == 8) %>% group_by(gender) %>% summarise(mean_age_by_gender = mean(age))

##mean age for matched couples

d %>% filter(wave == 8 & match == 1) %>% group_by(gender) %>% summarise(mean_age_by_gender = mean(age))



### Proportion of same race;
d %>% filter(wave == 8) %>% group_by(gender) %>% summarise(race = sum(samerace)/length(gender))

d %>% filter(wave == 8 & match == 1) %>% group_by(gender) %>% summarise(race = sum(samerace)/length(gender))


### For every wave
d %>% filter(match == 1) %>% group_by(gender, wave) %>% summarise(mean_age_by_gender = mean(age))

d %>% group_by(gender, wave) %>% summarise(mean_age_by_gender = mean(age))

d %>% filter(match == 1) %>% group_by(wave) %>% summarise(race = sum(samerace)/length(gender))


d %>% group_by(gender, wave) %>% summarise(mean_age_by_gender = mean(age))

d %>% filter(match == 1) %>% group_by(wave) %>% summarise(mean_corr = mean(int_corr))

```


Age difference

```{r}
## Age diff

d <-d %>% mutate(age_diff = abs(age_o-age))

d %>% group_by(age_diff) %>% summarise(des2 = sum(dec_o)/n()) %>% ggplot(aes(x = factor(age_diff), y = des2)) + geom_point() + ylim(0, 1)

## For age diff more than 15, not many obs
d %>% group_by(age_diff) %>% summarise(mat2 = sum(match)/n()) %>% ggplot(aes(x = factor(age_diff), y = mat2)) + geom_point() + ylim(0, 0.5)

d %>% group_by(age_diff) %>% summarise(mat2 = sum(match)/n()) %>% ggplot(aes(x = factor(age_diff), y = mat2)) + geom_point() + ylim(0,0.5)


d %>% group_by(age_diff) %>% summarise(mat2 = sum(match)/n()) %>% ggplot(aes(x = factor(age_diff), y = as.numeric(mat2))) + geom_bar(stat="identity", fill="steelblue") + theme_minimal() 


```



distribution of demographics

```{r}
ggplot() + 
  geom_bar(data = d,
           aes(x = factor(match),fill = factor(samerace)),
           position = "fill")

```

## Clean dataset part 2

# maps::map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))

ABB <- read.csv("ABB.csv")
map.world <- map_data("world")

map.region.tmp <- map.world %>% 
  select(region) %>%
  mutate(region = as.character(region)) %>%
  unique()

ABB.region.tmp <- ABB %>% 
  mutate(region = as.character(ABB)) %>%
  select(region) %>% 
  unique()

R.ABB <- as.data.frame(state.abb) %>%
  mutate(region = as.character(state.abb)) %>%
  select(region)

## 1. To check if there is non-matching STATE names in ABB and state.abb (in datasets)

ABB.region.tmp %>% anti_join(R.ABB, by = "region")

R.ABB[51:52,] <- c("DC", "PR") #Add DC and PR to the list of 50 states in USA


## 2. To create `USA/International` variable in the dataset d
fun.ABB <- function(d1){
ifelse(d1 %in% c("NA"), "NA",
         ifelse(d1 %in% R.ABB[,1], "USA", "International"))
}

d <- d %>% left_join(ABB %>% select(-No) %>% unique(), by = "from") %>% 
  mutate(`USA/International` = if_else(is.na(ABB) == FALSE, fun.ABB(as.character(ABB)), as.character(NA)),
         ABB = if_else(is.na(ABB) == FALSE, as.character(ABB), as.character(NA)),
         Country = if_else(`USA/International` == "USA", "USA", ABB))

## 3. To check if there is non-matching COUNTRY names in ABB and map_data (in ggplot2)

d %>% filter(Country != "USA") %>%
  mutate(region = ABB) %>%
  select(region) %>% 
  unique() %>% 
  anti_join(map.region.tmp, by = "region")

# Adjust two country names
d <- d %>% mutate(ABB = if_else(ABB == "Yugoslavia", "Montenegro", ABB),
                  ABB = if_else(ABB == "Hong Kong", "China", ABB),
                  region = Country) 

# To match country names in map_data, and our file




## AGE AMIN USE THIS!!

d <-d %>% mutate(age_diff = abs(age_o-age))

d %>% group_by(age_diff) %>% summarise(des2 = sum(dec_o)/n()) %>% ggplot(aes(x = factor(age_diff), y = des2)) + geom_point() + ylim(0, 1)

## For age diff more than 15, not many obs
d %>% group_by(age_diff) %>% summarise(mat2 = sum(match)/n()) %>% ggplot(aes(x = factor(age_diff), y = mat2)) + geom_point() + ylim(0, 0.5)

d %>% group_by(age_diff) %>% summarise(mat2 = sum(match)/n()) %>% ggplot(aes(x = factor(age_diff), y = mat2)) + geom_point() + ylim(0,0.5)


d %>% group_by(age_diff) %>% summarise(mat2 = sum(match)/n()) %>% ggplot(aes(x = factor(age_diff), y = as.numeric(mat2))) + geom_bar(stat="identity", fill="steelblue") + theme_minimal() 


d %>% mutate(age_diff2 = age_o-age) %>%  group_by(gender, age_diff2) %>% summarise(mat3 = sum(match)/n()) %>% ggplot(aes(x = factor(age_diff2), y = as.numeric(mat3))) + geom_bar(stat="identity") + facet_grid(gender~.)



d %>% mutate(age_diff2 = age_o-age) %>%  group_by(gender, age_diff2) %>% summarise(dec3 = sum(dec_o)/n()) %>% ggplot(aes(x = factor(age_diff2), y = as.numeric(dec3))) + geom_bar(stat="identity") + facet_grid(gender~.)

